version: '3.3'

services:
  crm:
    container_name: CRM
    hostname: crm
    build: ./Devs-Mentoring-CRM
    command: python3 manage.py runserver 0.0.0.0:8000
    restart: always
    volumes:
      - ./Devs-Mentoring-CRM:/usr/src/app/
    ports:
      - 8000:8000
    environment:
      - DJANGO_SECRET=${DJANGO_SECRET}
    networks:
      - crmnetwork

  api:
    build: ./ExercisesAPI
    container_name: API
    hostname: api
    command: python3 manage.py runserver 0.0.0.0:8001
    restart: always
    volumes:
      - ./ExercisesAPI:/usr/src/app
    ports:
      - 8001:8001
    environment:
      - DJANGO_SECRET=${DJANGO_SECRET}
    networks:
      - crmnetwork
   
  computing:
    build: ./ExercisesComputing
    container_name: Computing
    hostname: computing
    command: python3 manage.py runserver 0.0.0.0:8002
    restart: always
    volumes:
      - ./ExercisesComputing:/usr/src/app
    ports:
      - 8002:8002
    environment:
      - DJANGO_SECRET=${DJANGO_SECRET}
    networks:
      - crmnetwork


  rabbit:
    image: rabbitmq:latest
    hostname: broker
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    volumes:
        - /var/lib/rabbitmq
  
    networks:
      - crmnetwork

  celery:
    build: ./ExercisesComputing/
    restart: "no"
    command: celery -A ExercisesComputing worker -l info
    volumes:
      - ./ExercisesComputing:/computing
    depends_on:
      - rabbit
    networks:
      - crmnetwork
  
  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"
    networks:
      - crmnetwork

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/datasource.yml:/etc/grafana/datasources/datasource.yaml
    depends_on:
      - prometheus
    networks:
      - crmnetwork

networks:
  crmnetwork:
    external:
      name: CRM
    
